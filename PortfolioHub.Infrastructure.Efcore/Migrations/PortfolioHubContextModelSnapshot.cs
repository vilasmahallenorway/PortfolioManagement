// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using PortfolioHub.Infrastructure.Efcore;

#nullable disable

namespace PortfolioHub.Infrastructure.Efcore.Migrations
{
    [DbContext(typeof(PortfolioHubContext))]
    partial class PortfolioHubContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.22")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("PortfolioHub.Domain.Models.Plants", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("PlantName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<Guid>("PortfolioId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("PortfolioId");

                    b.ToTable("Plants", (string)null);
                });

            modelBuilder.Entity("PortfolioHub.Domain.Models.Portfolios", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("PortfolioName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<Guid>("TenantId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("TenantId");

                    b.ToTable("Portfolios", (string)null);
                });

            modelBuilder.Entity("PortfolioHub.Domain.Models.Tenants", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("TenantCountry")
                        .IsRequired()
                        .HasMaxLength(60)
                        .HasColumnType("nvarchar(60)");

                    b.Property<string>("TenantName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("Id");

                    b.ToTable("Tenants", (string)null);
                });

            modelBuilder.Entity("PortfolioHub.Domain.Models.UserPlants", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("PlantId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("PlantId");

                    b.HasIndex("UserId");

                    b.ToTable("UserPlants", (string)null);
                });

            modelBuilder.Entity("PortfolioHub.Domain.Models.Users", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("UserName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("Id");

                    b.ToTable("Users", (string)null);
                });

            modelBuilder.Entity("PortfolioHub.Domain.Models.Plants", b =>
                {
                    b.HasOne("PortfolioHub.Domain.Models.Portfolios", "Portfolios")
                        .WithMany("Plants")
                        .HasForeignKey("PortfolioId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Portfolios");
                });

            modelBuilder.Entity("PortfolioHub.Domain.Models.Portfolios", b =>
                {
                    b.HasOne("PortfolioHub.Domain.Models.Tenants", "Tenants")
                        .WithMany("Portfolios")
                        .HasForeignKey("TenantId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Tenants");
                });

            modelBuilder.Entity("PortfolioHub.Domain.Models.UserPlants", b =>
                {
                    b.HasOne("PortfolioHub.Domain.Models.Plants", "Plants")
                        .WithMany("UserPlantsDetails")
                        .HasForeignKey("PlantId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("PortfolioHub.Domain.Models.Users", "Users")
                        .WithMany("UserPlantsDetails")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Plants");

                    b.Navigation("Users");
                });

            modelBuilder.Entity("PortfolioHub.Domain.Models.Plants", b =>
                {
                    b.Navigation("UserPlantsDetails");
                });

            modelBuilder.Entity("PortfolioHub.Domain.Models.Portfolios", b =>
                {
                    b.Navigation("Plants");
                });

            modelBuilder.Entity("PortfolioHub.Domain.Models.Tenants", b =>
                {
                    b.Navigation("Portfolios");
                });

            modelBuilder.Entity("PortfolioHub.Domain.Models.Users", b =>
                {
                    b.Navigation("UserPlantsDetails");
                });
#pragma warning restore 612, 618
        }
    }
}
